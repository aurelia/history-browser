{"version":3,"file":"aurelia-history-browser.js","sources":["../../src/link-handler.ts","../../src/browser-history.ts","../../src/aurelia-history-browser.ts"],"sourcesContent":["import { DOM, PLATFORM } from 'aurelia-pal';\nimport { BrowserHistory } from './browser-history';\nimport { AnchorEventInfo } from './interfaces';\n\n/**\n * Class responsible for handling interactions that should trigger browser history navigations.\n */\nexport class LinkHandler {\n  /**\n   * Activate the instance.\n   *\n   * @param history The BrowserHistory instance that navigations should be dispatched to.\n   */\n  activate(history: BrowserHistory): void {/**/}\n\n  /**\n   * Deactivate the instance. Event handlers and other resources should be cleaned up here.\n   */\n  deactivate(): void {/**/}\n}\n\n/**\n * The default LinkHandler implementation. Navigations are triggered by click events on\n * anchor elements with relative hrefs when the history instance is using pushstate.\n */\nexport class DefaultLinkHandler extends LinkHandler {\n\n  /**@internal */\n  handler: (e: Event) => void;\n\n  /**@internal */\n  history: BrowserHistory;\n  /**\n   * Creates an instance of DefaultLinkHandler.\n   */\n  constructor() {\n    super();\n\n    this.handler = (e) => {\n      let { shouldHandleEvent, href } = DefaultLinkHandler.getEventInfo(e);\n\n      if (shouldHandleEvent) {\n        e.preventDefault();\n        this.history.navigate(href);\n      }\n    };\n  }\n\n  /**\n   * Activate the instance.\n   *\n   * @param history The BrowserHistory instance that navigations should be dispatched to.\n   */\n  activate(history: BrowserHistory): void {\n    if (history._hasPushState) {\n      this.history = history;\n      DOM.addEventListener('click', this.handler, true);\n    }\n  }\n\n  /**\n   * Deactivate the instance. Event handlers and other resources should be cleaned up here.\n   */\n  deactivate(): void {\n    DOM.removeEventListener('click', this.handler, true);\n  }\n\n  /**\n   * Gets the href and a \"should handle\" recommendation, given an Event.\n   *\n   * @param event The Event to inspect for target anchor and href.\n   */\n  static getEventInfo(event: Event): AnchorEventInfo {\n    let $event = event as MouseEvent;\n    let info = {\n      shouldHandleEvent: false,\n      href: null,\n      anchor: null\n    };\n\n    let target = DefaultLinkHandler.findClosestAnchor($event.target as Element);\n    if (!target || !DefaultLinkHandler.targetIsThisWindow(target)) {\n      return info;\n    }\n\n    if (hasAttribute(target, 'download')\n      || hasAttribute(target, 'router-ignore')\n      || hasAttribute(target, 'data-router-ignore')\n    ) {\n      return info;\n    }\n\n    if ($event.altKey || $event.ctrlKey || $event.metaKey || $event.shiftKey) {\n      return info;\n    }\n\n    let href = target.getAttribute('href');\n    info.anchor = target;\n    info.href = href;\n\n    let leftButtonClicked = $event.which === 1;\n    let isRelative = href && !(href.charAt(0) === '#' || (/^[a-z]+:/i).test(href));\n\n    info.shouldHandleEvent = leftButtonClicked && isRelative;\n    return info;\n  }\n\n  /**\n   * Finds the closest ancestor that's an anchor element.\n   *\n   * @param el The element to search upward from.\n   * @returns The link element that is the closest ancestor.\n   */\n  static findClosestAnchor(el: Element): Element {\n    while (el) {\n      if (el.tagName === 'A') {\n        return el;\n      }\n\n      el = el.parentNode as Element;\n    }\n  }\n\n  /**\n   * Gets a value indicating whether or not an anchor targets the current window.\n   *\n   * @param target The anchor element whose target should be inspected.\n   * @returns True if the target of the link element is this window; false otherwise.\n   */\n  static targetIsThisWindow(target: Element): boolean {\n    let targetWindow = target.getAttribute('target');\n    let win = PLATFORM.global;\n\n    return !targetWindow ||\n      targetWindow === win.name ||\n      targetWindow === '_self';\n  }\n}\n\nconst hasAttribute = (el: Element, attr: string) => el.hasAttribute(attr);\n","import { DOM, PLATFORM } from 'aurelia-pal';\nimport { LinkHandler } from './link-handler';\nimport { History } from 'aurelia-history';\n\n/**\n * An implementation of the basic history API.\n */\nexport class BrowserHistory extends History {\n  /**@internal */\n  static inject = [LinkHandler];\n\n  /**@internal */\n  _isActive: boolean;\n\n  /**@internal*/\n  _checkUrlCallback: any;\n  /**@internal*/\n  location: Location;\n  /**@internal*/\n  history: typeof PLATFORM['history'];\n  /**@internal*/\n  linkHandler: LinkHandler;\n  /**@internal*/\n  options: any;\n  /**@internal*/\n  root: string;\n  /**@internal*/\n  _wantsHashChange: boolean;\n  /**@internal*/\n  _hasPushState: boolean;\n  /**@internal*/\n  fragment: string;\n\n  /**\n   * Creates an instance of BrowserHistory\n   * @param linkHandler An instance of LinkHandler.\n   */\n  constructor(linkHandler: LinkHandler) {\n    super();\n\n    this._isActive = false;\n    this._checkUrlCallback = this._checkUrl.bind(this);\n\n    this.location = PLATFORM.location;\n    this.history = PLATFORM.history;\n    this.linkHandler = linkHandler;\n  }\n\n  /**\n   * Activates the history object.\n   * @param options The set of options to activate history with.\n   * @returns Whether or not activation occurred.\n   */\n  activate(options?: Object): boolean {\n    if (this._isActive) {\n      throw new Error('History has already been activated.');\n    }\n\n    let $history = this.history;\n    let wantsPushState = !!(options as any).pushState;\n\n    this._isActive = true;\n    let normalizedOptions = this.options = Object.assign({}, { root: '/' }, this.options, options);\n\n    // Normalize root to always include a leading and trailing slash.\n    let rootUrl = this.root = ('/' + normalizedOptions.root + '/').replace(rootStripper, '/');\n\n    let wantsHashChange = this._wantsHashChange = normalizedOptions.hashChange !== false;\n    let hasPushState = this._hasPushState = !!(normalizedOptions.pushState && $history && $history.pushState);\n\n    // Determine how we check the URL state.\n    let eventName: string;\n    if (hasPushState) {\n      eventName = 'popstate';\n    } else if (wantsHashChange) {\n      eventName = 'hashchange';\n    }\n\n    PLATFORM.addEventListener(eventName, this._checkUrlCallback);\n\n    // Determine if we need to change the base url, for a pushState link\n    // opened by a non-pushState browser.\n    if (wantsHashChange && wantsPushState) {\n      // Transition from hashChange to pushState or vice versa if both are requested.\n      let $location = this.location;\n      let atRoot = $location.pathname.replace(/[^\\/]$/, '$&/') === rootUrl;\n\n      // If we've started off with a route from a `pushState`-enabled\n      // browser, but we're currently in a browser that doesn't support it...\n      if (!hasPushState && !atRoot) {\n        let fragment =  this.fragment = this._getFragment(null, true);\n        $location.replace(rootUrl + $location.search + '#' + fragment);\n        // Return immediately as browser will do redirect to new url\n        return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n      } else if (hasPushState && atRoot && $location.hash) {\n        let fragment = this.fragment = this._getHash().replace(routeStripper, '');\n        $history.replaceState({}, DOM.title, rootUrl + fragment + $location.search);\n      }\n    }\n\n    if (!this.fragment) {\n      this.fragment = this._getFragment('');\n    }\n\n    this.linkHandler.activate(this);\n\n    if (!normalizedOptions.silent) {\n      return this._loadUrl('');\n    }\n  }\n\n  /**\n   * Deactivates the history object.\n   */\n  deactivate(): void {\n    const handler = this._checkUrlCallback;\n    PLATFORM.removeEventListener('popstate', handler);\n    PLATFORM.removeEventListener('hashchange', handler);\n    this._isActive = false;\n    this.linkHandler.deactivate();\n  }\n\n  /**\n   * Returns the fully-qualified root of the current history object.\n   * @returns The absolute root of the application.\n   */\n  getAbsoluteRoot(): string {\n    let $location = this.location;\n    let origin = createOrigin($location.protocol, $location.hostname, $location.port);\n    return `${origin}${this.root}`;\n  }\n\n  /**\n   * Causes a history navigation to occur.\n   *\n   * @param fragment The history fragment to navigate to.\n   * @param options The set of options that specify how the navigation should occur.\n   * @return Promise if triggering navigation, otherwise true/false indicating if navigation occurred.\n   */\n  navigate(fragment?: string, {trigger = true, replace = false} = {}): boolean {\n    let location = this.location;\n    if (fragment && absoluteUrl.test(fragment)) {\n      location.href = fragment;\n      return true;\n    }\n\n    if (!this._isActive) {\n      return false;\n    }\n\n    fragment = this._getFragment(fragment || '');\n\n    if (this.fragment === fragment && !replace) {\n      return false;\n    }\n\n    this.fragment = fragment;\n\n    let url = this.root + fragment;\n\n    // Don't include a trailing slash on the root.\n    if (fragment === '' && url !== '/') {\n      url = url.slice(0, -1);\n    }\n\n    // If pushState is available, we use it to set the fragment as a real URL.\n    if (this._hasPushState) {\n      url = url.replace('//', '/');\n      this.history[replace ? 'replaceState' : 'pushState']({}, DOM.title, url);\n    } else if (this._wantsHashChange) {\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      updateHash(location, fragment, replace);\n    } else {\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      location.assign(url);\n    }\n\n    if (trigger) {\n      return this._loadUrl(fragment);\n    }\n\n    return true;\n  }\n\n  /**\n   * Causes the history state to navigate back.\n   */\n  navigateBack(): void {\n    this.history.back();\n  }\n\n  /**\n   * Sets the document title.\n   */\n  setTitle(title: string): void {\n    DOM.title = title;\n  }\n\n  /**\n   * Sets a key in the history page state.\n   * @param key The key for the value.\n   * @param value The value to set.\n   */\n  setState(key: string, value: any): void {\n    let $history = this.history;\n    let state = Object.assign({}, $history.state);\n    let { pathname, search, hash } = this.location;\n    state[key] = value;\n    $history.replaceState(state, null, `${pathname}${search}${hash}`);\n  }\n\n  /**\n   * Gets a key in the history page state.\n   * @param key The key for the value.\n   * @return The value for the key.\n   */\n  getState(key: string): any {\n    let state = Object.assign({}, this.history.state);\n    return state[key];\n  }\n\n  /**\n   * Returns the current index in the navigation history.\n   * @returns The current index.\n   */\n  getHistoryIndex(): number {\n    let historyIndex = this.getState('HistoryIndex');\n    if (historyIndex === undefined) {\n      historyIndex = this.history.length - 1;\n      this.setState('HistoryIndex', historyIndex);\n    }\n    return historyIndex;\n  }\n\n  /**\n   * Move to a specific position in the navigation history.\n   * @param movement The amount of steps, positive or negative, to move.\n   */\n  go(movement: number): void {\n    this.history.go(movement);\n  }\n\n  /**\n   * @internal\n   */\n  _getHash(): string {\n    return this.location.hash.substr(1);\n  }\n\n  /**\n   * @internal\n   */\n  _getFragment(fragment: string, forcePushState?: boolean): string {\n    let rootUrl: string;\n\n    if (!fragment) {\n      if (this._hasPushState || !this._wantsHashChange || forcePushState) {\n        let location = this.location;\n        fragment = location.pathname + location.search;\n        rootUrl = this.root.replace(trailingSlash, '');\n        if (!fragment.indexOf(rootUrl)) {\n          fragment = fragment.substr(rootUrl.length);\n        }\n      } else {\n        fragment = this._getHash();\n      }\n    }\n\n    return '/' + fragment.replace(routeStripper, '');\n  }\n\n  /**\n   * Url change handler.\n   * Invoked when current fragment is different with previous fragment\n   * @internal\n   */\n  _checkUrl(): void {\n    let current = this._getFragment('');\n    if (current !== this.fragment) {\n      this._loadUrl('');\n    }\n  }\n\n  /**\n   * invoke routeHandler\n   * @internal\n   */\n  _loadUrl(fragmentOverride: string): boolean {\n    let fragment = this.fragment = this._getFragment(fragmentOverride);\n\n    return this.options.routeHandler ?\n      this.options.routeHandler(fragment) :\n      false;\n  }\n}\n\n// Cached regex for stripping a leading hash/slash and trailing space.\nconst routeStripper = /^#?\\/*|\\s+$/g;\n\n// Cached regex for stripping leading and trailing slashes.\nconst rootStripper = /^\\/+|\\/+$/g;\n\n// Cached regex for removing a trailing slash.\nconst trailingSlash = /\\/$/;\n\n// Cached regex for detecting if a URL is absolute,\n// i.e., starts with a scheme or is scheme-relative.\n// See http://www.ietf.org/rfc/rfc2396.txt section 3.1 for valid scheme format\nconst absoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n\n// Update the hash location, either replacing the current entry, or adding\n// a new one to the browser history.\nfunction updateHash($location: Location, fragment: string, replace: boolean) {\n  if (replace) {\n    let href = $location.href.replace(/(javascript:|#).*$/, '');\n    $location.replace(href + '#' + fragment);\n  } else {\n    // Some browsers require that `hash` contains a leading #.\n    $location.hash = '#' + fragment;\n  }\n}\n\nfunction createOrigin(protocol: string, hostname: string, port: string) {\n  return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\n","import {History} from 'aurelia-history';\nimport {LinkHandler, DefaultLinkHandler} from './link-handler';\nimport { BrowserHistory } from './browser-history';\n\n/**\n * Configures the plugin by registering BrowserHistory as the implementation of History in the DI container.\n * @param config The FrameworkConfiguration object provided by Aurelia.\n */\nexport function configure(config: Object): void {\n  // work around for converting to TS without breaking compat\n  const $config = config as any;\n  $config.singleton(History, BrowserHistory);\n  $config.transient(LinkHandler, DefaultLinkHandler);\n}\n\nexport {\n  LinkHandler,\n  DefaultLinkHandler,\n  BrowserHistory\n};\n"],"names":["tslib_1.__extends","DOM","PLATFORM","History"],"mappings":"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"}